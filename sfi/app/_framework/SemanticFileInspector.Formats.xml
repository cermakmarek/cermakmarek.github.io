<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SemanticFileInspector.Formats</name>
    </assembly>
    <members>
        <member name="T:IS4.SFI.Formats.Archives.ArchiveAdapter">
            <summary>
            Adapts an instance of <see cref="T:SharpCompress.Archives.IArchive"/> using
            an implementation of <see cref="T:IS4.SFI.Media.IArchiveFile"/>.
            </summary>
        </member>
        <member name="P:IS4.SFI.Formats.Archives.ArchiveAdapter.Entries">
            <inheritdoc/>
        </member>
        <member name="P:IS4.SFI.Formats.Archives.ArchiveAdapter.IsComplete">
            <inheritdoc/>
        </member>
        <member name="P:IS4.SFI.Formats.Archives.ArchiveAdapter.IsSolid">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.Archives.ArchiveAdapter.#ctor(SharpCompress.Archives.IArchive)">
            <summary>
            Creates a new instance of the archive.
            </summary>
            <param name="archive">The underlying archive to use.</param>
        </member>
        <member name="M:IS4.SFI.Formats.Archives.ArchiveAdapter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.Archives.ArchiveAdapter.ExtractPath(SharpCompress.Common.IEntry)">
            <summary>
            Extracts the path of an archive entry.
            </summary>
            <param name="entry">The entry to retrieve the path from.</param>
            <returns>
            The normalized value of <see cref="P:SharpCompress.Common.IEntry.Key"/>. If the entry
            is a directory, the path ends on '/'.
            </returns>
        </member>
        <member name="M:IS4.SFI.Formats.Archives.ArchiveAdapter.ExtractPathSimple(SharpCompress.Common.IEntry)">
            <summary>
            Extracts the path of an archive entry.
            </summary>
            <param name="entry">The entry to retrieve the path from.</param>
            <returns>
            The normalized value of <see cref="P:SharpCompress.Common.IEntry.Key"/>. If the entry
            is a directory, the path doesn't end on '/'.
            </returns>
        </member>
        <member name="P:IS4.SFI.Formats.Archives.ArchiveAdapter.ArchiveEntryInfo.Name">
            <inheritdoc/>
        </member>
        <member name="P:IS4.SFI.Formats.Archives.ArchiveAdapter.ArchiveEntryInfo.SubName">
            <inheritdoc/>
        </member>
        <member name="P:IS4.SFI.Formats.Archives.ArchiveAdapter.ArchiveEntryInfo.Path">
            <inheritdoc/>
        </member>
        <member name="P:IS4.SFI.Formats.Archives.ArchiveAdapter.ArchiveEntryInfo.CreationTime">
            <inheritdoc/>
        </member>
        <member name="P:IS4.SFI.Formats.Archives.ArchiveAdapter.ArchiveEntryInfo.LastWriteTime">
            <inheritdoc/>
        </member>
        <member name="P:IS4.SFI.Formats.Archives.ArchiveAdapter.ArchiveEntryInfo.LastAccessTime">
            <inheritdoc/>
        </member>
        <member name="P:IS4.SFI.Formats.Archives.ArchiveAdapter.ArchiveEntryInfo.ArchivedTime">
            <inheritdoc/>
        </member>
        <member name="P:IS4.SFI.Formats.Archives.ArchiveAdapter.ArchiveEntryInfo.Revision">
            <inheritdoc/>
        </member>
        <member name="P:IS4.SFI.Formats.Archives.ArchiveAdapter.ArchiveEntryInfo.ReferenceKey">
            <inheritdoc cref="P:IS4.SFI.Services.IPersistentKey.ReferenceKey"/>
        </member>
        <member name="P:IS4.SFI.Formats.Archives.ArchiveAdapter.ArchiveEntryInfo.IS4#SFI#Services#IPersistentKey#ReferenceKey">
            <inheritdoc/>
        </member>
        <member name="P:IS4.SFI.Formats.Archives.ArchiveAdapter.ArchiveEntryInfo.IS4#SFI#Services#IPersistentKey#DataKey">
            <inheritdoc/>
        </member>
        <member name="P:IS4.SFI.Formats.Archives.ArchiveAdapter.ArchiveEntryInfo.Kind">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.Archives.ArchiveAdapter.ArchiveEntryInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.Archives.ArchiveReaderAdapter">
            <summary>
            Adapts an instance of <see cref="T:SharpCompress.Readers.IReader"/> using
            an implementation of <see cref="T:IS4.SFI.Media.IArchiveReader"/>.
            </summary>
        </member>
        <member name="P:IS4.SFI.Formats.Archives.ArchiveReaderAdapter.IsComplete">
            <inheritdoc/>
        </member>
        <member name="P:IS4.SFI.Formats.Archives.ArchiveReaderAdapter.IsSolid">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.Archives.ArchiveReaderAdapter.#ctor(SharpCompress.Readers.IReader)">
            <summary>
            Creates a new instance of the reader.
            </summary>
            <param name="reader">The underlying reader to use.</param>
        </member>
        <member name="P:IS4.SFI.Formats.Archives.ArchiveReaderAdapter.Current">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.Archives.ArchiveReaderAdapter.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.Archives.ArchiveReaderAdapter.MoveNext">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.Archives.ArchiveReaderAdapter.Reset">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.Archives.ArchiveReaderAdapter.Skip">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.Archives.SharpCompressExtensions">
            <summary>
            Contains extension methods for SharpCompress types.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.Archives.SharpCompressExtensions.CreateEntryStream(SharpCompress.Readers.IReader,System.IO.Stream)">
            <summary>
            Creates an instance of <see cref="T:SharpCompress.Common.EntryStream"/> from the supplied arguments.
            </summary>
            <param name="reader">The parent archive reader.</param>
            <param name="stream">The inner data stream.</param>
            <returns>A new instance of <see cref="T:SharpCompress.Common.EntryStream"/> from the arguments.</returns>
        </member>
        <member name="T:IS4.SFI.Formats.ArchiveFormat`1">
            <summary>
            Represents an archive format producing instances of <see cref="T:SharpCompress.Archives.IArchive"/>.
            </summary>
            <typeparam name="TArchive">The supported archive type.</typeparam>
        </member>
        <member name="M:IS4.SFI.Formats.ArchiveFormat`1.#ctor(System.Int32,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.ArchiveFormat`1.#ctor(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.ArchiveFormat`1.#ctor(System.Byte[],System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.ArchiveFormat`1.CheckArchive(`0)">
            <summary>
            Checks that the provided <typeparamref name="TArchive"/> instance was correctly recognized.
            </summary>
            <param name="archive">The checked archive.</param>
            <returns>True if the archive is valid.</returns>
        </member>
        <member name="T:IS4.SFI.Formats.GZipFormat">
            <summary>
            Represents the gzip archive format.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.GZipFormat.#ctor">
            <inheritdoc cref="M:IS4.SFI.Formats.FileFormat`1.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:IS4.SFI.Formats.GZipFormat.Match``2(System.IO.Stream,IS4.SFI.Formats.MatchContext,IS4.SFI.ResultFactory{IS4.SFI.Media.IArchiveReader,``0,``1},``1)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.RarFormat">
            <summary>
            Represents the RAR archive format.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.RarFormat.#ctor">
            <inheritdoc cref="M:IS4.SFI.Formats.FileFormat`1.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:IS4.SFI.Formats.RarFormat.Match``2(System.IO.Stream,IS4.SFI.Formats.MatchContext,IS4.SFI.ResultFactory{IS4.SFI.Media.IArchiveReader,``0,``1},``1)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.SevenZipFormat">
            <summary>
            Represents the 7zip archive format.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.SevenZipFormat.#ctor">
            <inheritdoc cref="M:IS4.SFI.Formats.FileFormat`1.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:IS4.SFI.Formats.SevenZipFormat.Match``2(System.IO.Stream,IS4.SFI.Formats.MatchContext,IS4.SFI.ResultFactory{IS4.SFI.Media.IArchiveFile,``0,``1},``1)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.SzFormat">
            <summary>
            Represents the SZ archive format.
            </summary>
        </member>
        <member name="F:IS4.SFI.Formats.SzFormat.storedTypes">
            <summary>
            Stores the inner type of each <see cref="T:IS4.SFI.Formats.Archives.ArchiveReaderAdapter"/> instance.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.SzFormat.#ctor">
            <inheritdoc cref="M:IS4.SFI.Formats.FileFormat`1.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:IS4.SFI.Formats.SzFormat.CheckHeader(System.Span{System.Byte},System.Boolean,IS4.SFI.Services.IEncodingDetector)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.SzFormat.GetMediaType(IS4.SFI.Media.IArchiveReader)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.SzFormat.Match``2(System.IO.Stream,IS4.SFI.Formats.MatchContext,IS4.SFI.ResultFactory{IS4.SFI.Media.IArchiveReader,``0,``1},``1)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.TarFormat">
            <summary>
            Represents the tar archive format.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.TarFormat.#ctor">
            <inheritdoc cref="M:IS4.SFI.Formats.FileFormat`1.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:IS4.SFI.Formats.TarFormat.CheckHeader(System.Span{System.Byte},System.Boolean,IS4.SFI.Services.IEncodingDetector)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.TarFormat.Match``2(System.IO.Stream,IS4.SFI.Formats.MatchContext,IS4.SFI.ResultFactory{IS4.SFI.Media.IArchiveReader,``0,``1},``1)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.ZipFormat">
            <summary>
            Represents the ZIP archive format.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.ZipFormat.#ctor">
            <inheritdoc cref="M:IS4.SFI.Formats.FileFormat`1.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:IS4.SFI.Formats.ZipFormat.Match``2(System.IO.Stream,IS4.SFI.Formats.MatchContext,IS4.SFI.ResultFactory{IS4.SFI.Media.IArchiveFile,``0,``1},``1)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.OleStorageFormat">
            <summary>
            Represents the OLE storage format, producing instances of <see cref="T:OpenMcdf.CompoundFile"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.OleStorageFormat.#ctor">
            <inheritdoc cref="M:IS4.SFI.Formats.FileFormat`1.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:IS4.SFI.Formats.OleStorageFormat.CheckHeader(System.Span{System.Byte},System.Boolean,IS4.SFI.Services.IEncodingDetector)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.OleStorageFormat.Match``2(System.IO.Stream,IS4.SFI.Formats.MatchContext,IS4.SFI.ResultFactory{OpenMcdf.CompoundFile,``0,``1},``1)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.ExcelDocumentFormat">
            <summary>
            Represents the Excel (XLS) document format, producing instances of <see cref="T:NPOI.HSSF.UserModel.HSSFWorkbook"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.ExcelDocumentFormat.#ctor">
            <inheritdoc cref="M:IS4.SFI.Formats.FileFormat`1.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:IS4.SFI.Formats.ExcelDocumentFormat.GetExtension(NPOI.HSSF.UserModel.HSSFWorkbook)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.ExcelDocumentFormat.GetMediaType(NPOI.HSSF.UserModel.HSSFWorkbook)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.ExcelDocumentFormat.Open(NPOI.POIFS.FileSystem.NPOIFSFileSystem)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.ExcelXmlDocumentFormat">
            <summary>
            Represents the Excel (XSLT) document format, producing instances of <see cref="T:NPOI.XSSF.UserModel.XSSFWorkbook"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.ExcelXmlDocumentFormat.#ctor">
            <inheritdoc cref="M:IS4.SFI.Formats.FileFormat`1.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:IS4.SFI.Formats.ExcelXmlDocumentFormat.GetExtension(NPOI.XSSF.UserModel.XSSFWorkbook)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.ExcelXmlDocumentFormat.Open(NPOI.OpenXml4Net.OPC.OPCPackage)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.OleDocumentFormat`1">
            <summary>
            Represents a container format based on the OLE file structure.
            </summary>
            <typeparam name="T">The entity type produced by the format.</typeparam>
        </member>
        <member name="M:IS4.SFI.Formats.OleDocumentFormat`1.#ctor(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.OleDocumentFormat`1.MatchRoot(IS4.SFI.Services.IDirectoryInfo,IS4.SFI.Services.AnalysisContext)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.OleDocumentFormat`1.Open(NPOI.POIFS.FileSystem.NPOIFSFileSystem)">
            <summary>
            Opens an instance of <see cref="T:NPOI.POIFS.FileSystem.NPOIFSFileSystem"/> and interprets
            it as the package-specific type <typeparamref name="T"/>.
            </summary>
            <param name="fileSystem">The OLE file system.</param>
            <returns>The media object representing the package.</returns>
        </member>
        <member name="T:IS4.SFI.Formats.OpenPackageFormat">
            <summary>
            Represents the OOXML package format, matching packages with the
            <see cref="F:NPOI.OpenXml4Net.OPC.Internal.ContentTypeManager.CONTENT_TYPES_PART_NAME"/> file.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.OpenPackageFormat.#ctor">
            <inheritdoc cref="M:IS4.SFI.Formats.FileFormat`1.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:IS4.SFI.Formats.OpenPackageFormat.MatchRoot(IS4.SFI.Services.IFileNodeInfo,IS4.SFI.Services.AnalysisContext)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.OpenPackageFormat.PackageInfo">
            <summary>
            Represents the content types in the package.
            </summary>
        </member>
        <member name="P:IS4.SFI.Formats.OpenPackageFormat.PackageInfo.Root">
            <summary>
            The root path of the package.
            </summary>
        </member>
        <member name="P:IS4.SFI.Formats.OpenPackageFormat.PackageInfo.ContentTypeManager">
            <summary>
            The instance of <see cref="T:NPOI.OpenXml4Net.OPC.Internal.ContentTypeManager"/>
            providing content types of the files within the package.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.OpenPackageFormat.PackageInfo.#ctor(IS4.SFI.Services.IFileNodeInfo)">
            <summary>
            Creates a new instance of the info.
            </summary>
            <param name="contentTypes">The <see cref="F:NPOI.OpenXml4Net.OPC.Internal.ContentTypeManager.CONTENT_TYPES_PART_NAME"/> file.</param>
        </member>
        <member name="M:IS4.SFI.Formats.OpenPackageFormat.PackageInfo.Analyze(IS4.SFI.Services.IContainerNode,IS4.SFI.Services.IFileNodeInfo,IS4.SFI.Services.AnalysisContext,IS4.SFI.Services.AnalyzeInner,IS4.SFI.Services.IEntityAnalyzers)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.OpenPackageFormat.PackageInfo.Analyze(IS4.SFI.Services.IContainerNode,IS4.SFI.Services.IDataObject,IS4.SFI.Services.AnalysisContext,IS4.SFI.Services.AnalyzeInner,IS4.SFI.Services.IEntityAnalyzers)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.OpenXmlDocumentFormat`1">
            <summary>
            Represents a format based on the OOXML package format.
            </summary>
            <typeparam name="T">The type of the instances created by the format.</typeparam>
        </member>
        <member name="M:IS4.SFI.Formats.OpenXmlDocumentFormat`1.#ctor(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.OpenXmlDocumentFormat`1.MatchRoot(IS4.SFI.Services.IDirectoryInfo,IS4.SFI.Services.AnalysisContext)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.OpenXmlDocumentFormat`1.Open(NPOI.OpenXml4Net.OPC.OPCPackage)">
            <summary>
            Opens an instance of <see cref="T:NPOI.OpenXml4Net.OPC.OPCPackage"/> and interprets
            it as the package-specific type <typeparamref name="T"/>.
            </summary>
            <param name="package">The OOXML package.</param>
            <returns>The media object representing the package.</returns>
        </member>
        <member name="T:IS4.SFI.Formats.PdfFormat">
            <summary>
            Represents the Portable Document Format, producing instances of <see cref="T:PdfSharpCore.Pdf.PdfDocument"/>.
            </summary>
        </member>
        <member name="P:IS4.SFI.Formats.PdfFormat.OpenMode">
            <summary>
            The opening mode used for matched PDF documents.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.PdfFormat.#ctor">
            <inheritdoc cref="M:IS4.SFI.Formats.FileFormat`1.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:IS4.SFI.Formats.PdfFormat.Match``2(System.IO.Stream,IS4.SFI.Formats.MatchContext,IS4.SFI.ResultFactory{PdfSharpCore.Pdf.PdfDocument,``0,``1},``1)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.WordDocumentFormat">
            <summary>
            Represents the Word (DOC) document format, producing instances of <see cref="T:NPOI.HWPF.HWPFDocument"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.WordDocumentFormat.#ctor">
            <inheritdoc cref="M:IS4.SFI.Formats.FileFormat`1.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:IS4.SFI.Formats.WordDocumentFormat.Open(NPOI.POIFS.FileSystem.NPOIFSFileSystem)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.WordXmlDocumentFormat">
            <summary>
            Represents the Word (DOCX) document format, producing instances of <see cref="T:NPOI.XWPF.UserModel.XWPFDocument"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.WordXmlDocumentFormat.#ctor">
            <inheritdoc cref="M:IS4.SFI.Formats.FileFormat`1.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:IS4.SFI.Formats.WordXmlDocumentFormat.Open(NPOI.OpenXml4Net.OPC.OPCPackage)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.IsoFormat">
            <summary>
            Represents the ISO CD image format, as an instance of <see cref="T:DiscUtils.Iso9660.CDReader"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.IsoFormat.#ctor">
            <inheritdoc cref="M:IS4.SFI.Formats.FileFormat`1.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:IS4.SFI.Formats.IsoFormat.CheckHeader(System.ArraySegment{System.Byte},System.Boolean,IS4.SFI.Services.IEncodingDetector)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.IsoFormat.CheckHeader(System.Span{System.Byte},System.Boolean,IS4.SFI.Services.IEncodingDetector)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.IsoFormat.Match``2(System.IO.Stream,IS4.SFI.Formats.MatchContext,IS4.SFI.ResultFactory{DiscUtils.Iso9660.CDReader,``0,``1},``1)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.SvgFormat">
            <summary>
            Represents the SVG image format, producing instances of <see cref="T:Svg.SvgDocument"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.SvgFormat.#ctor">
            <inheritdoc cref="M:IS4.SFI.Formats.FileFormat`1.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:IS4.SFI.Formats.SvgFormat.CheckDocument(System.Xml.Linq.XDocumentType,System.Xml.XmlReader)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.SvgFormat.Match``2(System.Xml.XmlReader,System.Xml.Linq.XDocumentType,IS4.SFI.Formats.MatchContext,IS4.SFI.ResultFactory{Svg.SvgDocument,``0,``1},``1)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.ImageMetadataFormat">
            <summary>
            Represents a format for images with metadata, producing instances of
            <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:MetadataExtractor.Directory"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.ImageMetadataFormat.#ctor">
            <inheritdoc cref="M:IS4.SFI.Formats.FileFormat`1.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:IS4.SFI.Formats.ImageMetadataFormat.GetExtension(System.Collections.Generic.IReadOnlyList{MetadataExtractor.Directory})">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.ImageMetadataFormat.GetMediaType(System.Collections.Generic.IReadOnlyList{MetadataExtractor.Directory})">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.ImageMetadataFormat.Match``2(System.IO.Stream,IS4.SFI.Formats.MatchContext,IS4.SFI.ResultFactory{System.Collections.Generic.IReadOnlyList{MetadataExtractor.Directory},``0,``1},``1)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.ImageMetadataFormat.CheckHeader(System.Span{System.Byte},System.Boolean,IS4.SFI.Services.IEncodingDetector)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.MetadataExtractorFormat">
            <summary>
            Represents a format using <see cref="M:MetadataExtractor.Util.FileTypeDetector.DetectFileType(System.IO.Stream)"/>
            to detect the format, producing instances of <see cref="T:IS4.SFI.Formats.MetadataExtractorFormat.FileTypeWrapper"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.MetadataExtractorFormat.#ctor">
            <inheritdoc cref="M:IS4.SFI.Formats.FileFormat`1.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:IS4.SFI.Formats.MetadataExtractorFormat.GetExtension(IS4.SFI.Formats.MetadataExtractorFormat.FileTypeWrapper)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.MetadataExtractorFormat.GetMediaType(IS4.SFI.Formats.MetadataExtractorFormat.FileTypeWrapper)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.MetadataExtractorFormat.Match``2(System.IO.Stream,IS4.SFI.Formats.MatchContext,IS4.SFI.ResultFactory{IS4.SFI.Formats.MetadataExtractorFormat.FileTypeWrapper,``0,``1},``1)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.MetadataExtractorFormat.CheckHeader(System.ArraySegment{System.Byte},System.Boolean,IS4.SFI.Services.IEncodingDetector)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.MetadataExtractorFormat.CheckHeader(System.Span{System.Byte},System.Boolean,IS4.SFI.Services.IEncodingDetector)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.MetadataExtractorFormat.FileTypeWrapper">
            <summary>
            Wraps a <see cref="T:MetadataExtractor.Util.FileType"/>
            </summary>
        </member>
        <member name="P:IS4.SFI.Formats.MetadataExtractorFormat.FileTypeWrapper.Value">
            <summary>
            The recognized type of the file.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.MetadataExtractorFormat.FileTypeWrapper.#ctor(MetadataExtractor.Util.FileType)">
            <summary>
            Creates a new instance of the wrapper.
            </summary>
            <param name="value">The value of <see cref="P:IS4.SFI.Formats.MetadataExtractorFormat.FileTypeWrapper.Value"/>.</param>
        </member>
        <member name="T:IS4.SFI.Formats.Modules.DosModule">
            <summary>
            Represents an MS-DOS executable module.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.Modules.DosModule.#ctor(System.IO.Stream)">
            <summary>
            Creates a new instance of the module.
            </summary>
            <param name="stream">The stream storing the module in the MZ format.</param>
        </member>
        <member name="M:IS4.SFI.Formats.Modules.DosModule.GetCompressedContents">
            <summary>
            Decompresses the executable.
            </summary>
            <returns>
            The decompressed equivalent of the executable, as an instance
            of <see cref="T:IS4.SFI.Services.IFileInfo"/>.
            </returns>
        </member>
        <member name="T:IS4.SFI.Formats.DosModuleFormat">
            <summary>
            Represents the MS-DOS MZ module format, producing instances of
            <see cref="T:IS4.SFI.Formats.Modules.DosModule"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.DosModuleFormat.#ctor">
            <inheritdoc cref="M:IS4.SFI.Formats.FileFormat`1.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:IS4.SFI.Formats.DosModuleFormat.CheckSignature(System.Span{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.DosModuleFormat.Match``2(System.IO.Stream,IS4.SFI.Formats.MatchContext,IS4.SFI.ResultFactory{IS4.SFI.Formats.Modules.DosModule,``0,``1},``1)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.Win32ModuleFormatManaged">
            <summary>
            Represents the Windows PE module format, backed by <see cref="T:PeNet.PeFile"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.Win32ModuleFormatManaged.#ctor">
            <inheritdoc cref="M:IS4.SFI.Formats.FileFormat`1.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:IS4.SFI.Formats.Win32ModuleFormatManaged.Match``2(System.IO.Stream,IS4.SFI.Formats.MatchContext,IS4.SFI.ResultFactory{IS4.SFI.Media.IModule,``0,``1},``1)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.TagLibFormat">
            <summary>
            Represents tagged formats, as instances of <see cref="T:TagLib.File"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Formats.TagLibFormat.#ctor">
            <inheritdoc cref="M:IS4.SFI.Formats.FileFormat`1.#ctor(System.String,System.String)"/>
        </member>
        <member name="M:IS4.SFI.Formats.TagLibFormat.GetExtension(TagLib.File)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.TagLibFormat.GetMediaType(TagLib.File)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.TagLibFormat.Match``2(System.IO.Stream,IS4.SFI.Formats.MatchContext,IS4.SFI.ResultFactory{TagLib.File,``0,``1},``1)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.TagLibFormat.CheckHeader(System.ArraySegment{System.Byte},System.Boolean,IS4.SFI.Services.IEncodingDetector)">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.TagLibFormat.CheckHeader(System.Span{System.Byte},System.Boolean,IS4.SFI.Services.IEncodingDetector)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Formats.TagLibFormat.File">
            <summary>
            An implementation of <see cref="T:TagLib.File.IFileAbstraction"/>
            for an instance of <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="P:IS4.SFI.Formats.TagLibFormat.File.Name">
            <inheritdoc/>
        </member>
        <member name="P:IS4.SFI.Formats.TagLibFormat.File.ReadStream">
            <inheritdoc/>
        </member>
        <member name="P:IS4.SFI.Formats.TagLibFormat.File.WriteStream">
            <inheritdoc/>
        </member>
        <member name="M:IS4.SFI.Formats.TagLibFormat.File.#ctor(System.IO.Stream,System.String)">
            <summary>
            Creates a new instance from a stream and a file name.
            </summary>
            <param name="stream">The value of <see cref="P:IS4.SFI.Formats.TagLibFormat.File.ReadStream"/>.</param>
            <param name="name">The value of <see cref="P:IS4.SFI.Formats.TagLibFormat.File.Name"/>.</param>
        </member>
        <member name="M:IS4.SFI.Formats.TagLibFormat.File.#ctor(System.IO.Stream,IS4.SFI.Services.IFileNodeInfo)">
            <summary>
            Creates a new instance from a stream and a file node info.
            </summary>
            <param name="stream">The value of <see cref="P:IS4.SFI.Formats.TagLibFormat.File.ReadStream"/>.</param>
            <param name="source">The info to fill <see cref="P:IS4.SFI.Formats.TagLibFormat.File.Name"/> from.</param>
        </member>
        <member name="M:IS4.SFI.Formats.TagLibFormat.File.#ctor(System.IO.Stream,IS4.SFI.Formats.MatchContext)">
            <summary>
            Creates a new instance from a stream and a context.
            </summary>
            <param name="stream">The value of <see cref="P:IS4.SFI.Formats.TagLibFormat.File.ReadStream"/>.</param>
            <param name="context">The context to look for an instance of <see cref="T:IS4.SFI.Services.IFileNodeInfo"/>.</param>
        </member>
        <member name="M:IS4.SFI.Formats.TagLibFormat.File.CloseStream(System.IO.Stream)">
            <summary>
            Does not do anything.
            </summary>
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Analyzers.CabinetAnalyzer">
            <summary>
            Analyzes Cabinet archives, as instances of <see cref="T:IS4.SFI.Media.ICabinetArchive"/>.
            The analysis itself is performed by analyzing <see cref="T:IS4.SFI.Media.IArchiveReader"/>
            on an adapted instance of the archive.
            </summary>
        </member>
        <member name="M:IS4.SFI.Analyzers.CabinetAnalyzer.Analyze(IS4.SFI.Media.ICabinetArchive,IS4.SFI.Services.AnalysisContext,IS4.SFI.Services.IEntityAnalyzers)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Analyzers.OleStorageAnalyzer">
            <summary>
            An analyzer of OLE compound files as instances of <see cref="T:OpenMcdf.CompoundFile"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Analyzers.OleStorageAnalyzer.Analyze(OpenMcdf.CompoundFile,IS4.SFI.Services.AnalysisContext,IS4.SFI.Services.IEntityAnalyzers)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Analyzers.OleDocumentAnalyzer">
            <summary>
            Analyzes OLE-based documents, as instances of <see cref="T:NPOI.POIDocument"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Analyzers.OleDocumentAnalyzer.#ctor">
            <inheritdoc cref="M:IS4.SFI.Services.EntityAnalyzer.#ctor"/>
        </member>
        <member name="M:IS4.SFI.Analyzers.OleDocumentAnalyzer.Analyze(NPOI.POIDocument,IS4.SFI.Services.AnalysisContext,IS4.SFI.Services.IEntityAnalyzers)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Analyzers.OpenXmlDocumentAnalyzer">
            <summary>
            Analyzes OOXML-based documents, as instances of <see cref="T:NPOI.POIXMLDocument"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Analyzers.OpenXmlDocumentAnalyzer.#ctor">
            <inheritdoc cref="M:IS4.SFI.Services.EntityAnalyzer.#ctor"/>
        </member>
        <member name="M:IS4.SFI.Analyzers.OpenXmlDocumentAnalyzer.Analyze(NPOI.POIXMLDocument,IS4.SFI.Services.AnalysisContext,IS4.SFI.Services.IEntityAnalyzers)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Analyzers.PdfAnalyzer">
            <summary>
            Analyzes PDF documents, as instances of <see cref="T:PdfSharpCore.Pdf.PdfDocument"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Analyzers.PdfAnalyzer.#ctor">
            <inheritdoc cref="M:IS4.SFI.Services.EntityAnalyzer.#ctor"/>
        </member>
        <member name="M:IS4.SFI.Analyzers.PdfAnalyzer.Analyze(PdfSharpCore.Pdf.PdfDocument,IS4.SFI.Services.AnalysisContext,IS4.SFI.Services.IEntityAnalyzers)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Analyzers.FileSystemAnalyzer">
            <summary>
            Analyzer of file systems, as instances of <see cref="T:DiscUtils.IFileSystem"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Analyzers.FileSystemAnalyzer.#ctor">
            <inheritdoc cref="M:IS4.SFI.Services.EntityAnalyzer.#ctor"/>
        </member>
        <member name="M:IS4.SFI.Analyzers.FileSystemAnalyzer.Analyze(DiscUtils.IFileSystem,IS4.SFI.Services.AnalysisContext,IS4.SFI.Services.IEntityAnalyzers)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Analyzers.SvgAnalyzer">
            <summary>
            Analyzes SVG images as instances of <see cref="T:Svg.SvgDocument"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Analyzers.SvgAnalyzer.#ctor">
            <inheritdoc cref="M:IS4.SFI.Services.EntityAnalyzer.#ctor"/>
        </member>
        <member name="M:IS4.SFI.Analyzers.SvgAnalyzer.Analyze(Svg.SvgDocument,IS4.SFI.Services.AnalysisContext,IS4.SFI.Services.IEntityAnalyzers)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Analyzers.ExifMetadataAnalyzer">
            <summary>
            An analyzer of EXIF metadata, as instances
            of <see cref="T:MetadataExtractor.Formats.Exif.ExifDirectoryBase"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Analyzers.ExifMetadataAnalyzer.Analyze(MetadataExtractor.Formats.Exif.ExifDirectoryBase,IS4.SFI.Services.AnalysisContext,IS4.SFI.Services.IEntityAnalyzers)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Analyzers.ImageMetadataAnalyzer">
            <summary>
            Analyzes image metadata represented by collections of <see cref="T:MetadataExtractor.Directory"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Analyzers.ImageMetadataAnalyzer.Analyze(System.Collections.Generic.IReadOnlyList{MetadataExtractor.Directory},IS4.SFI.Services.AnalysisContext,IS4.SFI.Services.IEntityAnalyzers)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Analyzers.XmpMetadataAnalyzer">
            <summary>
            An analyzer of XMP metadata, as instances
            of <see cref="T:MetadataExtractor.Formats.Xmp.XmpDirectory"/>.
            </summary>
        </member>
        <member name="F:IS4.SFI.Analyzers.XmpMetadataAnalyzer.XmpSerializeOptions">
            <summary>
            The options to use when serializing XMP metadata to XML.
            </summary>
        </member>
        <member name="M:IS4.SFI.Analyzers.XmpMetadataAnalyzer.Analyze(MetadataExtractor.Formats.Xmp.XmpDirectory,IS4.SFI.Services.AnalysisContext,IS4.SFI.Services.IEntityAnalyzers)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Analyzers.DosModuleAnalyzer">
            <summary>
            An analyzer of MS-DOS modules, as instances of <see cref="T:IS4.SFI.Formats.Modules.DosModule"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Analyzers.DosModuleAnalyzer.#ctor">
            <inheritdoc cref="M:IS4.SFI.Services.EntityAnalyzer.#ctor"/>
        </member>
        <member name="M:IS4.SFI.Analyzers.DosModuleAnalyzer.Analyze(IS4.SFI.Formats.Modules.DosModule,IS4.SFI.Services.AnalysisContext,IS4.SFI.Services.IEntityAnalyzers)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Analyzers.TagLibAnalyzer">
            <summary>
            Analyzes instances of <see cref="T:TagLib.File"/> as containers of tags.
            </summary>
        </member>
        <member name="M:IS4.SFI.Analyzers.TagLibAnalyzer.Analyze(TagLib.File,IS4.SFI.Services.AnalysisContext,IS4.SFI.Services.IEntityAnalyzers)">
            <inheritdoc/>
        </member>
        <member name="T:IS4.SFI.Analyzers.XmpTagAnalyzer">
            <summary>
            An analyzer of XMP metadata tags, as instances
            of <see cref="T:TagLib.Xmp.XmpTag"/>.
            </summary>
        </member>
        <member name="M:IS4.SFI.Analyzers.XmpTagAnalyzer.Analyze(TagLib.Xmp.XmpTag,IS4.SFI.Services.AnalysisContext,IS4.SFI.Services.IEntityAnalyzers)">
            <inheritdoc/>
        </member>
    </members>
</doc>
